---
- name: Create groups
  group:
    name: "{{ item.groupname }}"
    state: "{{ item.state | default('present') }}"
    gid: "{{ item.gid | default(omit) }}"
    system: "{{ item.system | default(omit) }}"
  with_items: "{{ users_groups }}"
  when: users_groups is defined
  tags:
    - setup_users

- name: Create per-user groups for default users
  group:
    name: "{{ item.username }}"
    state: "present"
    gid: "{{ item.gid | default(omit) }}"
    system: "{{ item.system | default(omit) }}"
  with_items:
    - "{{ users | default([]) }}"
    - "{{ additionalusers | default([]) }}"
  when: users_per_user_groups == true
  tags:
    - setup_users

- name: Create users
  user:
    name: '{{ item.username }}'
    comment: '{{ item.comment | default(omit) }}'
    group: '{{ item.group | default(item.username) }}'
    groups: '{{ item.groups | default("") | join(",") }}'
    uid: '{{ item.uid | default(omit) }}'
    state: 'present'
    shell: '{{ item.shell | default(users_default_shell) }}'
    password: '{{ item.password | default(users_default_password) }}'
    home: '{{ item.home | default(users_default_home+"/"+item.username) }}'
  with_items:
    - "{{ users | default([]) }}"
    - "{{ additionalusers | default([]) }}"
  tags:
    - setup_users

- name: set ownership of directory to new user
  file:
    path: '{{ users_default_home+"/"+item.username }}'
    owner: '{{ item.username }}'
    group: '{{ item.username }}'
    state: directory
  with_items:
    - "{{ users | default([]) }}"
    - "{{ additionalusers | default([]) }}"
  tags:
    - setup_users

- name: Add admin users to admin group
  user:
    name: '{{ item.username }}'
    state: 'present'
    groups: '{{ users_admin_group }}'
    append: yes
    createhome: no
  with_items:
    - "{{ users | default([]) }}"
    - "{{ additionalusers | default([]) }}"
  when: >
    item.is_admin is defined and
    item.is_admin == true
  tags:
    - setup_users

- name: Create .ssh directory
  file:
    path: "/home/{{ item.username }}/.ssh"
    state: directory
    mode: 0700
  with_items:
    - "{{ users | default([]) }}"
    - "{{ additionalusers | default([]) }}"
  when: item.username is defined
  tags:
    - setup_users

- name: SSH keys
  authorized_key:
    user='{{ item.username }}'
    key='{{ item.pubkey | default("none") }}'
    #path="/home/{{ item.username }}/.ssh/authorized_keys"
  with_items:
    - "{{ users | default([]) }}"
    - "{{ additionalusers | default([]) }}"
  when:
    item.pubkey is defined
  tags:
    - setup_users

- name: Sudo installed
  apt: name=sudo state=present
  tags:
    - setup_users

- name: Admin sudoers
  template:
    src: 'sudo_administrators.j2'
    dest: '/etc/sudoers.d/administrators'
    owner: 'root'
    group: 'root'
    mode: '0440'
  when: users_manage_admin_sudoers == true
  tags:
    - setup_users

### disable the 'pi' user's ability to login in with password
### if you enable this, you may lock yourself out--you must make sure another
### user has been added with both sudo privileges and a password by which
### sudo can be authenticated
- name: disable 'pi' user
  user: name="pi"
        password="*"
        state=present
  when: disable_pi_user
  notify: Reboot Pi
  tags:
    - disable_pi_user
